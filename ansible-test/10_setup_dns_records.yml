### ansible-playbook -i inventory.ini 10_setup_dns_records.yml
---
- name: Manage FreeIPA DNS Zones and Records
  hosts: ipaserver
  gather_facts: yes
  become: yes
  # vars:
  #   ipaadmin_principal: "admin"
  #   ipaadmin_password: "vmware123"

  tasks:
    - name: Ensure Kerberos Ticket is Present
      shell: echo "{{ ipaadmin_password }}" | kinit {{ ipaadmin_principal }}
      register: kinit_result
      changed_when: false
      failed_when: kinit_result.rc != 0

    - name: Validate IPA Services
      command: ipactl status
      register: ipa_status
      changed_when: false
      failed_when: "'The ipactl command was successful' not in ipa_status.stderr"

    - name: Print Current Kerberos Ticket
      command: klist -e
      register: kerberos_ticket
      changed_when: false

    - name: Debug Kerberos Ticket Details
      debug:
        msg: "{{ kerberos_ticket.stdout.replace('\t', '    ').split('\n') }}"

    - name: Extract Reverse DNS Zone from IP Address
      set_fact:
        reverse_dns_zone: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['network'].split('.')[1] }}.{{ hostvars[inventory_hostname]['ansible_default_ipv4']['network'].split('.')[0] }}.in-addr.arpa."

    - name: Ensure Reverse DNS Zone is Present
      freeipa.ansible_freeipa.ipadnszone:
        ipaadmin_password: "{{ ipaadmin_password }}"
        name: "{{ reverse_dns_zone }}"
        state: present

    - name: Add PTR Records Dynamically
      freeipa.ansible_freeipa.ipadnsrecord:
        ipaadmin_password: "{{ ipaadmin_password }}"
        name: "{{ item.split('.')[3] }}.{{ item.split('.')[2] }}"
        zone_name: "{{ reverse_dns_zone }}"
        record_type: "PTR"
        record_value: "{{ hostvars[item]['cldr_hostname'] }}.{{ ipaserver_domain }}."
        state: present
      loop: "{{ groups['all'] }}"

    - name: Verify Created DNS Records in FreeIPA
      command: ipa dnsrecord-find {{ reverse_dns_zone }}
      register: ipa_dns_records
      changed_when: false

    - name: Debug FreeIPA DNS Records
      debug:
        msg: "{{ ipa_dns_records.stdout_lines }}"

    - name: Verify A Record using dig
      shell: dig $(hostname -f) A | grep -A2 ANSWER
      register: dig_result
      changed_when: false

    - name: Debug dig Output
      debug:
        msg: "{{ dig_result.stdout.replace('\t', '    ').split('\n') }}"

    - name: Verify reverse lookup using dig
      shell: dig -x $(hostname -i) | grep -A2 ANSWER
      register: dig_result
      changed_when: false

    - name: Debug dig Output
      debug:
        msg: "{{ dig_result.stdout.replace('\t', '    ').split('\n') }}"

    - name: Validate DNS resolution using nslookup
      shell: "nslookup $(hostname -f)"
      register: nslookup_output
      changed_when: false

    - name: Display nslookup output for DNS
      debug:
        msg: "{{ nslookup_output.stdout.replace('\t', '    ').split('\n') }}"

    - name: Validate IP resolution using nslookup
      shell: "nslookup $(hostname -i)"
      register: nslookup_output
      changed_when: false

    - name: Display nslookup output for IP
      debug:
        msg: "{{ nslookup_output.stdout.replace('\t', '    ').split('\n') }}"
