### ansible-playbook -i inventory.ini 9_node_prereqs_setup.yml
---
- name: Enable Repositories and Install Packages
  hosts: all
  become: yes

  tasks:
    - name: Enable RHEL Repositories (if RHEL-based)
      command: >
        subscription-manager repos --enable=rhel-{{ ansible_distribution_major_version }}-for-{{ ansible_architecture }}-baseos-rpms
        --enable=rhel-{{ ansible_distribution_major_version }}-for-{{ ansible_architecture }}-appstream-rpms
      when: ansible_os_family == "RedHat"

    - name: Enable CentOS Stream AppStream Repos (if CentOS)
      command: dnf config-manager --set-enabled appstream
      when: ansible_distribution == "CentOS"

    # - name: Enable EPEL Repository (for RHEL & CentOS)
    #   dnf:
    #     name: epel-release
    #     state: present
    #   when: ansible_os_family == "RedHat"

    - name: Install necessary packages
      dnf:
        name:
          - python3
          - python3-pip
          - wget
          - telnet
          - mlocate
          - tar
          - traceroute
          - net-tools
          - bind-utils
          - nc
        state: present

    - name: Install Java only on non-IPA server hosts
      dnf:
        name:
          - "java-{{ java_version }}-openjdk"
          - "java-{{ java_version }}-openjdk-devel"
        state: present
      when: "'ipaserver' not in inventory_hostname"

    - name: Verify Java installation
      command: java -version
      register: java_version_output
      changed_when: false
    
    - name: Display Java version
      debug:
        msg: "{{ java_version_output.stdout_lines }}"

    - name: Verify Python installation
      command: python3 -V
      register: python_version_output
      changed_when: false
    
    - name: Display Python version
      debug:
        msg: "{{ python_version_output.stdout_lines }}"

    - name: Upgrade pip
      pip:
        name: pip
        state: latest
    
    - name: Verify pip version
      command: pip3 -V
      register: pip_version_output
      changed_when: false
    
    - name: Display pip version
      debug:
        msg: "{{ pip_version_output.stdout_lines }}"
    
    - name: Install psycopg2-binary
      pip:
        name: psycopg2-binary
        state: present
    
    - name: Verify psycopg2 installation
      command: pip3 list | grep psy
      register: psycopg2_output
      changed_when: false
    
    - name: Display psycopg2 installation output
      debug:
        msg: "{{ psycopg2_output.stdout_lines }}"

    - name: Install PostgreSQL repository
      dnf:
        name: https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm
        state: present
        disable_gpg_check: yes

    - name: Install PostgreSQL 14
      ansible.builtin.dnf:
        name: postgresql14
        state: present
    
    - name: Verify PostgreSQL installation
      ansible.builtin.command: psql --version
      register: psql_version
      changed_when: false

    - name: Debug PostgreSQL version
      ansible.builtin.debug:
        msg: "{{ psql_version.stdout }}"

    - name: Verify Chrony tracking
      command: chronyc tracking
      register: chrony_tracking_output
      changed_when: false
    
    - name: Display Chrony tracking output
      debug:
        msg: "{{ chrony_tracking_output.stdout_lines }}"

    - name: Verify Chrony sources
      command: chronyc sources
      register: chrony_sources_output
      changed_when: false
    
    - name: Display Chrony sources output
      debug:
        msg: "{{ chrony_sources_output.stdout_lines }}"

- name: Install FreeIPA client packages
  hosts: all:!ipaserver
  become: yes

  tasks:
    - name: Download FreeIPA client packages and required packages
      dnf:
        name:
          - freeipa-client
          - openldap-clients
          - krb5-workstation
          - krb5-libs
        state: present
