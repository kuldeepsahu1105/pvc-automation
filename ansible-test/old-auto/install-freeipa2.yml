---
- name: Install and configure FreeIPA and prerequisites
  hosts: all
  become: true
  tasks:
    - name: Set static hostname on each node
      hostname:
        name: "{{ inventory_hostname }}.cdppvcds.com"
        static: yes

    - name: Update and install base packages
      package:
        name: "{{ item }}"
        state: present
      loop:
        - python3
        - python3-pip
        - net-tools
        - bind-utils
        - wget
        - traceroute
        - nc

    - name: Upgrade pip
      pip:
        name: pip
        state: latest

    - name: Install specific Python version if needed
      command: "{{ item }}"
      with_items:
        - "dnf -y install python3.9"  # Adjust as per your requirements

    - name: Configure /etc/hosts
      blockinfile:
        path: /etc/hosts
        block: |
          127.0.0.1 localhost
          ::1 localhost ip6-localhost ip6-loopback
          172.31.24.240 ipaserver.cdppvcds.com ipaserver
          172.31.27.139 cldr-mngr.cdppvcds.com cldr-mngr
          172.31.21.104 pvcbase-master.cdppvcds.com pvcbase-master
          # Add all other hosts similarly

    - name: Ensure Python dependencies are installed
      pip:
        name: "{{ item }}"
        state: latest
      with_items:
        - psycopg2-binary  # Example package, adjust as needed

    - name: Remove chrony service
      systemd:
        name: chronyd
        state: stopped
        enabled: no

    - name: Install FreeIPA packages
      package:
        name: "{{ item }}"
        state: present
      loop:
        - ipa-server
        - bind
        - bind-dyndb-ldap
        - ipa-server-dns
        - firewalld

    - name: Configure FreeIPA server
      command: ipa-server-install -U --ds-password={{ freeipa_ds_password }} --admin-password={{ freeipa_admin_password }}
      # command: ipa-server-install --setup-dns --unattended
      args:
        creates: /etc/ipa/default.conf
      environment:
        KRB5_TRACE: "/dev/stdout"  # Optional: Enable Kerberos debug traces for troubleshooting
      register: ipa_install_output

    - name: Print ipa-server-install output
      debug:
        msg: "{{ ipa_install_output.stdout_lines }}"

---
- name: Install FreeIPA Server Packages
  hosts: all
  become: true

  tasks:
    - name: Install FreeIPA server packages on ipaserver
      ansible.builtin.yum:
        name: "{{ item }}"
        state: present
      loop:
        - ipa-server
        - ipa-server-dns
        - ipa-server-trust-ad
      when: inventory_hostname in groups['ipaserver']

    - name: Install FreeIPA client and OpenLDAP clients
      ansible.builtin.yum:
        name:
          - ipa-client
          - openldap-clients
        state: present
      when: inventory_hostname not in groups['ipaserver']

---
- name: Manage DNS Zone and Packages Using Ansible
  hosts: all  # Assuming 'all' group includes ipaserver and other nodes

  tasks:
    - name: Install FreeIPA server packages on ipaserver
      when: inventory_hostname in groups['ipaserver']
      ansible.builtin.yum:
        name:
          - ipa-server
          - ipa-server-dns
          - ipa-server-trust-ad
        state: present
      become: true

    - name: Install FreeIPA client and OpenLDAP clients on other nodes
      when: inventory_hostname not in groups['ipaserver']
      ansible.builtin.yum:
        name:
          - ipa-client
          - openldap-clients
        state: present
      become: true

    - name: Create DNS zone if it doesn't exist
      community.general.ipa_dnszone:
        name: "{{ dns_zone }}"
        state: present
      vars:
        dns_zone: example.com  # Specify your DNS zone

    - name: Loop through host groups and add DNS records
      ansible.builtin.include_tasks: add_dns_records.yml
      loop:
        - group_name: base-master
        - group_name: base-workers
        - group_name: acs-master
        - group_name: acs-workers
      loop_control:
        loop_var: group_info
      vars:
        dns_zone: example.com  # Specify your DNS zone

