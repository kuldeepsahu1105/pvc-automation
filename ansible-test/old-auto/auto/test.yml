[root@ipaserver ansible-test]# cat *
[all:vars]
ipaadmin_password=ADMPassword1
ipadm_password=DMPassword1
ipaserver_domain=cdppvcds.com
ipaserver_realm=TEST.LOCAL
ipaserver_setup_dns=yes
ipaserver_auto_forwarders=yes
ipaserver_install_packages=no
ipaserver_setup_firewalld=no

[ipaserver]
172.26.31.1 cldr_hostname=ipaserver

[cldr-mngr]
172.26.31.1 cldr_hostname=cldr-mngr

[base-masters]
172.26.31.1 cldr_hostname=pvcbase-master

[base-workers]
172.26.31.2 cldr_hostname=pvcbase-worker1
172.26.31.3 cldr_hostname=pvcbase-worker2

[ecs-masters]
172.31.15.110 cldr_hostname=pvcecs-master

[ecs-workers]
172.26.31.2 cldr_hostname=pvcecs-worker1
172.26.31.3 cldr_hostname=pvcecs-worker2
---
- name: System Update and Package Installation
  hosts: all
  become: yes  # Ensure you have the necessary privileges
  tasks:

    - name: Update all packages
      dnf:
        name: "*"
        state: latest
      register: update_result

    - name: Install required packages
      dnf:
        name:
          - wget
          - telnet
          - net-tools
          - bind-utils
          - iproute
          - traceroute
          - nc
          - python3
          - python3-pip
        state: present

    - name: Upgrade pip3 to the latest version
      pip:
        name: pip
        state: latest
        executable: pip3
      become: yes

    - name: Verify if Python3 is installed
      command: python3 --version
      register: python_version
      ignore_errors: yes

    - name: Print Python3 version
      debug:
        msg: "Python3 version: {{ python_version.stdout }}"
      when: python_version.rc == 0

    - name: Verify if Pip3 is installed
      command: pip3 --version
      register: pip_version
      ignore_errors: yes

    - name: Print Pip3 version
      debug:
        msg: "Pip3 version: {{ pip_version.stdout }}"
      when: pip_version.rc == 0

    - name: Ensure Python3 and Pip3 are installed
      package:
        name:
          - python3
          - python3-pip
        state: present

---
- name: Set hostname to IP address
  hosts: all
  become: yes
  tasks:
    - name: Print cldr_hostname and ipaserver_domain
      debug:
        msg: "cldr_hostname is {{ cldr_hostname }} and ipaserver_domain is {{ ipaserver_domain }}"

    - name: Set system hostname to IP address with domain
      hostname:
        name: "{{ cldr_hostname }}.{{ ipaserver_domain }}"

    - name: Verify hostname has been set
      command: hostname
      register: current_hostname

    - name: Display the new hostname
      debug:
        msg: "The hostname is now: {{ current_hostname.stdout }}"
