---
- name: Backup and update /etc/resolv.conf dynamically (on-prem or AWS)
  hosts: all
  become: true
  vars:
    freeipa_private_ip: "{{ freeipa_private_ip | default('172.31.24.240') }}"  # Default if not passed
    ipa_domain: "{{ ipa_domain | default('cdppvcds.com') }}"  # Default if not passed

  tasks:
    - name: Backup the current /etc/resolv.conf
      ansible.builtin.copy:
        src: /etc/resolv.conf
        dest: "/etc/resolv.conf.bak.{{ ansible_date_time.iso8601 }}"
        backup: yes
        mode: '0644'

    - name: Get current DNS servers from /etc/resolv.conf
      ansible.builtin.slurp:
        src: /etc/resolv.conf
      register: resolv_conf

    - name: Extract DNS servers from resolv.conf
      ansible.builtin.set_fact:
        dns_servers: "{{ resolv_conf['content'] | b64decode | regex_findall('nameserver\\s(\\d+\\.\\d+\\.\\d+\\.\\d+)') }}"

    - name: Display extracted DNS servers
      ansible.builtin.debug:
        msg: "DNS Servers: {{ dns_servers }}"

    - name: Update /etc/resolv.conf with FreeIPA and DNS
      ansible.builtin.blockinfile:
        path: /etc/resolv.conf
        block: |
          search {{ ipa_domain }}
          nameserver {{ freeipa_private_ip }}
          {% for dns in dns_servers %}
          nameserver {{ dns }}
          {% endfor %}
          nameserver 127.0.0.1
        create: yes
        validate: '/usr/bin/grep -q "nameserver" /etc/resolv.conf'

    - name: Display updated /etc/resolv.conf for verification
      ansible.builtin.command:
        cmd: cat /etc/resolv.conf
      register: resolv_conf_output

    - name: Show the updated /etc/resolv.conf
      ansible.builtin.debug:
        var: resolv_conf_output.stdout
