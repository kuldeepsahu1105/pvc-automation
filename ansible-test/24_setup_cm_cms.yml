### ansible-playbook -i inventory.ini 20_verify_cm.yml

---
- name: Complete Cloudera Manager and CDH 7.1.9 Setup via API
  hosts: localhost
  gather_facts: no
  vars:
    cm_admin_user: "admin"
    cm_admin_pass: "admin"
    cluster_name: "CDH-Cluster"
    cdh_version: "7.1.9"
    parcel_repo: "https://archive.cloudera.com/cdh7/7.1.9/parcels/"
    kerberos_principal: "admin/admin@EXAMPLE.COM"
    kerberos_password: "kerberos_password"
    license_file_name: "license.txt"
    scm_default_user: "admin"
    scm_default_pass: "admin"
  tasks:
    - name: Set Cloudera Manager Host IP
      ansible.builtin.set_fact:
        cm_host: "{{ hostvars[groups['cldr-mngr'][0]].ansible_host }}" # Fetch IP of the first host in cldr-mngr group

    - name: Debug cm_host
      ansible.builtin.debug:
        msg: "cm_host is set to {{ cm_host }}"

    - name: Set Cloudera Manager API base URL
      ansible.builtin.set_fact:
        cm_api_url: "http://{{ cm_host }}:{{ cm_port }}/api/v54"

    - name: Debug cm_api URL
      ansible.builtin.debug:
        msg: "cm_api_url is set to {{ cm_api_url }}"




    - name: Enable Cloudera Management Services
      ansible.builtin.uri:
        url: "{{ cm_api_url }}/cm/service"
        method: PUT
        user: "{{ cm_admin_user }}"
        password: "{{ cm_admin_pass }}"
        force_basic_auth: yes
        body_format: json
        body:
          items:
            - name: "Cloudera Management Service"
              type: "MGMT"
        status_code: 200
      register: management_services

    # - name: Create Cluster
    #   ansible.builtin.uri:
    #     url: "{{ cm_api_url }}/clusters/{{ cluster_name }}"
    #     method: POST
    #     user: "{{ cm_admin_user }}"
    #     password: "{{ cm_admin_pass }}"
    #     force_basic_auth: yes
    #     body_format: json
    #     body:
    #       items:
    #         - name: "{{ cluster_name }}"
    #           version: "CDH{{ cdh_version }}"
    #     status_code: 201,409
    #   register: cluster_create

    # - name: Set Parcel Repository
    #   ansible.builtin.uri:
    #     url: "{{ cm_api_url }}/cm/config"
    #     method: PUT
    #     user: "{{ cm_admin_user }}"
    #     password: "{{ cm_admin_pass }}"
    #     force_basic_auth: yes
    #     body_format: json
    #     body:
    #       items:
    #         - name: "REMOTE_PARCEL_REPO_URLS"
    #           value: "{{ parcel_repo }}"
    #     status_code: 200
    #   register: parcel_repo_set

    # - name: Download and Distribute Parcel
    #   ansible.builtin.uri:
    #     url: "{{ cm_api_url }}/clusters/{{ cluster_name }}/parcels/products/CDH/versions/{{ cdh_version }}/commands/startDistribution"
    #     method: POST
    #     user: "{{ cm_admin_user }}"
    #     password: "{{ cm_admin_pass }}"
    #     force_basic_auth: yes
    #     status_code: 200
    #   register: parcel_distribution

    # - name: Activate Parcel
    #   ansible.builtin.uri:
    #     url: "{{ cm_api_url }}/clusters/{{ cluster_name }}/parcels/products/CDH/versions/{{ cdh_version }}/commands/activate"
    #     method: POST
    #     user: "{{ cm_admin_user }}"
    #     password: "{{ cm_admin_pass }}"
    #     force_basic_auth: yes
    #     status_code: 200
    #   register: parcel_activation

    # - name: Install Base Cluster Services
    #   ansible.builtin.uri:
    #     url: "{{ cm_api_url }}/clusters/{{ cluster_name }}/services"
    #     method: POST
    #     user: "{{ cm_admin_user }}"
    #     password: "{{ cm_admin_pass }}"
    #     force_basic_auth: yes
    #     body_format: json
    #     body:
    #       items:
    #         - name: "HDFS"
    #           type: "HDFS"
    #         - name: "YARN"
    #           type: "YARN"
    #         - name: "Hive"
    #           type: "HIVE"
    #         - name: "Ranger"
    #           type: "RANGER"
    #         - name: "Atlas"
    #           type: "ATLAS"
    #         - name: "Zookeeper"
    #           type: "ZOOKEEPER"
    #         - name: "Kafka"
    #           type: "KAFKA"
    #         - name: "HBase"
    #           type: "HBASE"
    #         - name: "Phoenix"
    #           type: "PHOENIX"
    #         - name: "Impala"
    #           type: "IMPALA"
    #         - name: "Tez"
    #           type: "TEZ"
    #         - name: "Hive-on-Tez"
    #           type: "HIVE_ON_TEZ"
    #     status_code: 200
    #   register: service_installation
