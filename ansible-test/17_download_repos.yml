### ansible-playbook -i inventory.ini 17_download_repos.yml
# vars:
#   cm_version: "7.11.3.28"
#   cm_numeric_version: "60766845"
#   cdh_version: "7.1.9.1023"
#   cdh_numeric_version: "60818430"
#   spark_version: "3.3.7191000.4"
#   spark_minor_version: "3.3.2.3.3.7191000.4"
#   spark_numeric_version: "p0.60728639"
#   public_ip: "{{ ansible_default_ipv4.address }}"
#   cm_repo_username: "<username>"
#   cm_repo_password: "<password>"
#   webserver_path: "/var/www/html"
#   cldr_repos_path: "{{ webserver_path }}/cloudera-repos"

---
- name: Setup Cloudera Manager and Dependencies
  hosts: cldr-mngr
  become: yes
  tasks:
    - name: Set CDH and Spark version variables
      set_fact:
        os_version: "{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}"
        cm_major_version: "{{ cm_version.split('.')[:3] | join('.') }}"
        cdh7: "cdh{{ cdh_version.split('.')[0] }}"
        cdh_major_version: "{{ cdh_version.split('.')[:3] | join('.') }}"
        cdh_build_number: "{{ cdh_version.split('.')[-1] }}"
        spark3: "spark{{ spark_version.split('.')[0] }}"

    - name: Create necessary directories
      file:
        path: "{{ cldr_repos_path }}/{{ item }}"
        state: directory
      loop:
        - cloudera-manager
        - cloudera-manager/cm{{ cm_major_version }}/{{ os_version }}/yum/RPMS/{{ ansible_architecture }}/
        - "{{ cdh7 }}/{{ cdh_version }}"
        - "spark3/{{ spark_version }}"

    - name: Download Cloudera Manager repo files
      get_url:
        url: >-
          https://{{ cm_repo_username }}:{{ cm_repo_password }}@archive.cloudera.com/p/cm7/{{ cm_version }}/
          {%- if item in ['allkeys.asc', 'allkeyssha256.asc'] -%}
          {{ item }}
          {%- else -%}
          {{ os_version }}/yum/{{ item }}
          {%- endif -%}
        dest: "{{ cldr_repos_path }}/cloudera-manager/{{ item }}"
      loop:
        - cloudera-manager.repo
        - cloudera-manager-trial.repo
        - RPM-GPG-KEY-cloudera
        - allkeys.asc
        - allkeyssha256.asc

    - name: List downloaded Cloudera Manager repo files
      command: "ls -lh {{ cldr_repos_path }}/cloudera-manager/"
      register: cm_repo_ls
      changed_when: false

    - name: Print Cloudera Manager repo files
      debug:
        msg: "{{ cm_repo_ls.stdout.replace('\t', '    ').split('\n') }}"

    - name: Download Cloudera Manager RPMs
      get_url:
        url: "https://{{ cm_repo_username }}:{{ cm_repo_password }}@archive.cloudera.com/p/cm7/{{ cm_version }}/{{ os_version }}/yum/RPMS/{{ ansible_architecture }}/{{ item }}"
        dest: "{{ cldr_repos_path }}/cloudera-manager/cm{{ cm_major_version }}/{{ os_version }}/yum/RPMS/{{ ansible_architecture }}/"
      loop:
        - "cloudera-manager-agent-{{ cm_version }}-{{ cm_numeric_version }}.el{{ ansible_distribution_major_version }}.{{ ansible_architecture }}.rpm"
        - "cloudera-manager-daemons-{{ cm_version }}-{{ cm_numeric_version }}.el{{ ansible_distribution_major_version }}.{{ ansible_architecture }}.rpm"
        - "cloudera-manager-server-{{ cm_version }}-{{ cm_numeric_version }}.el{{ ansible_distribution_major_version }}.{{ ansible_architecture }}.rpm"
        - "cloudera-manager-server-db-2-{{ cm_version }}-{{ cm_numeric_version }}.el{{ ansible_distribution_major_version }}.{{ ansible_architecture }}.rpm"

    - name: List downloaded Cloudera Manager RPMs
      command: "ls -lh {{ cldr_repos_path }}/cloudera-manager/cm{{ cm_major_version }}/{{ os_version }}/yum/RPMS/{{ ansible_architecture }}/"
      register: cm_rpm_ls
      changed_when: false

    - name: Print Cloudera Manager RPMs
      debug:
        msg: "{{ cm_rpm_ls.stdout.replace('\t', '    ').split('\n') }}"

    - name: Download CDH Parcels
      get_url:
        url: "https://{{ cm_repo_username }}:{{ cm_repo_password }}@archive.cloudera.com/p/{{ cdh7 }}/{{ cdh_version }}/parcels/CDH-{{ cdh_major_version }}-1.cdh{{ cdh_major_version }}.p{{ cdh_build_number }}.{{ cdh_numeric_version }}-el{{ ansible_distribution_major_version }}.parcel"
        dest: "{{ cldr_repos_path }}/{{ cdh7 }}/{{ cdh_version }}/"

    - name: List downloaded CDH Parcels
      command: "ls -lh {{ cldr_repos_path }}/{{ cdh7 }}/{{ cdh_version }}/"
      register: cdh_parcels_ls
      changed_when: false

    - name: Print CDH Parcels
      debug:
        msg: "{{ cdh_parcels_ls.stdout.replace('\t', '    ').split('\n') }}"

    - name: Download Spark Parcels
      get_url:
        url: "https://{{ cm_repo_username }}:{{ cm_repo_password }}@archive.cloudera.com/p/{{ spark3 }}/{{ spark_version }}/parcels/SPARK3-{{ spark_minor_version }}-1-1.{{ spark_numeric_version }}-el{{ ansible_distribution_major_version }}.parcel"
        dest: "{{ cldr_repos_path }}/{{ spark3 }}/{{ spark_version }}/"

    - name: List downloaded Spark Parcels
      command: "ls -lh {{ cldr_repos_path }}/{{ spark3 }}/{{ spark_version }}/"
      register: spark_parcels_ls
      changed_when: false

    - name: Print Spark Parcels
      debug:
        msg: "{{ spark_parcels_ls.stdout.replace('\t', '    ').split('\n') }}"

    # - name: Get public IP from ipify
    #   uri:
    #     url: "https://api.ipify.org/"
    #     return_content: yes
    #   register: public_ip_result

    - name: Run createrepo
      command: "createrepo --baseurl http://{{ ansible_default_ipv4.address }}/cloudera-repos/cloudera-manager/ {{ cldr_repos_path }}/cloudera-manager/"
      args:
        chdir: "{{ cldr_repos_path }}/cloudera-manager/"

    - name: Distribute the updated cloudera-manager.repo file to all the servers
      ansible.builtin.template:
        src: "templates/cloudera-manager.repo.j2"
        dest: "/etc/yum.repos.d/cloudera-manager.repo"
        owner: root
        group: root
        mode: "0644"

    - name: Ensure services are started
      service:
        name: httpd
        state: started
        enabled: yes
