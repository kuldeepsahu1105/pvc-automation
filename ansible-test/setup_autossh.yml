- name: Generate and Distribute SSH Key Pair
  hosts: ipaserver
  become: true
  # vars:
  #   # User whose SSH keys we are generating (defaults to 'root')
  #   ssh_user: "root"
  #   # ssh_user: "{{ ssh_user | default('root') }}"
  #   ssh_dir: "/root/.ssh"  # Explicitly set to /root/.ssh
  #   # Handle home directory correctly based on user
  #   # ssh_dir: "{{ '/root/.ssh' if ssh_user == 'root' else '/home/' + ssh_user + '/.ssh' }}"
  #   private_key_path: "{{ ssh_dir }}/id_rsa"
  #   public_key_path: "{{ ssh_dir }}/id_rsa.pub"
  #   authorized_keys_path: "{{ ssh_dir }}/authorized_keys"
  #   force_generate: "{{ hostvars[inventory_hostname].force_generate | default(false) }}"
  vars_files:
    - ssh_vars.yml

  tasks:
    - name: Ensure .ssh directory exists for {{ ssh_user }}
      file:
        path: "{{ ssh_dir }}"
        state: directory
        mode: '0700'
        owner: "{{ ssh_user }}"
        group: "{{ ssh_user }}"

    - name: Check if SSH private key exists in {{ ssh_dir }}
      stat:
        path: "{{ private_key_path }}"
      register: private_key_stat

    - name: Generate SSH key pair in {{ ssh_dir }}
      openssh_keypair:
        path: "{{ private_key_path }}"
        type: rsa
        size: 2048
        owner: "{{ ssh_user }}"
        group: "{{ ssh_user }}"
        mode: '0600'
      when: private_key_stat.stat.exists == false or force_generate == true

    - name: Read the public key file from {{ ssh_dir }}
      slurp:
        src: "{{ public_key_path }}"
      register: public_key_data

    - name: Ensure public key is available
      fail:
        msg: "Failed to read public key from {{ public_key_path }}"
      when: public_key_data is not defined or public_key_data.content is not defined

    - name: Add public key to authorized_keys for {{ ssh_dir }}
      authorized_key:
        user: "{{ ssh_user }}"
        state: present
        key: "{{ public_key_data.content | b64decode }}"
      when: public_key_data is defined and public_key_data.content is defined

- name: Copy SSH Key to Other Hosts
  hosts: all:!ipaserver  # Copy to all except ipaserver itself
  become: true
  vars_files:
    - ssh_vars.yml

  tasks:
    - name: Ensure .ssh directory exists for {{ ssh_user }} on target hosts
      file:
        path: "{{ ssh_dir }}"
        state: directory
        mode: '0700'
        owner: "{{ ssh_user }}"
        group: "{{ ssh_user }}"

    - name: Copy SSH private key from ipaserver to other hosts
      copy:
        src: "{{ private_key_path }}"
        dest: "{{ private_key_path }}"
        mode: '0600'
        owner: "{{ ssh_user }}"
        group: "{{ ssh_user }}"

    - name: Copy SSH public key from ipaserver to other hosts
      copy:
        src: "{{ public_key_path }}"
        dest: "{{ public_key_path }}"
        mode: '0644'
        owner: "{{ ssh_user }}"
        group: "{{ ssh_user }}"

    - name: Copy authorized_keys file from ipaserver to other hosts
      copy:
        src: "{{ authorized_keys_path }}"
        dest: "{{ authorized_keys_path }}"
        mode: '0600'
        owner: "{{ ssh_user }}"
        group: "{{ ssh_user }}"
